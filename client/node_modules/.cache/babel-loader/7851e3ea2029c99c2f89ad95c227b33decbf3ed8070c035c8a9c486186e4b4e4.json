{"ast":null,"code":"var _jsxFileName = \"/Users/omribakish/Desktop/CryptoGraphQL/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CRYPTO_PRICES = gql`\n  query GetCryptoPrices {\n    cryptoPrices {\n      id\n      symbol\n      name\n      price\n      lastUpdated\n    }\n  }\n`;\nfunction App() {\n  _s();\n  var _data$cryptoPrices;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CRYPTO_PRICES, {\n    pollInterval: 30000 // Poll every 30 seconds\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading cryptocurrency prices...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDE80 CryptoGraphQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Real-time cryptocurrency prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"crypto-grid\",\n      children: data === null || data === void 0 ? void 0 : (_data$cryptoPrices = data.cryptoPrices) === null || _data$cryptoPrices === void 0 ? void 0 : _data$cryptoPrices.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: crypto.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"symbol\",\n            children: crypto.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price\",\n          children: [\"$\", crypto.price.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-updated\",\n          children: [\"Last updated: \", new Date(crypto.lastUpdated).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, crypto.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data from CoinGecko API \\u2022 Updates every 30 seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_CRYPTO_PRICES","App","_s","_data$cryptoPrices","loading","error","data","pollInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","cryptoPrices","map","crypto","name","symbol","price","toLocaleString","Date","lastUpdated","toLocaleTimeString","id","_c","$RefreshReg$"],"sources":["/Users/omribakish/Desktop/CryptoGraphQL/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport \"./App.css\";\n\nconst GET_CRYPTO_PRICES = gql`\n  query GetCryptoPrices {\n    cryptoPrices {\n      id\n      symbol\n      name\n      price\n      lastUpdated\n    }\n  }\n`;\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_CRYPTO_PRICES, {\n    pollInterval: 30000, // Poll every 30 seconds\n  });\n\n  if (loading)\n    return <div className=\"loading\">Loading cryptocurrency prices...</div>;\n  if (error) return <div className=\"error\">Error: {error.message}</div>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ðŸš€ CryptoGraphQL</h1>\n        <p>Real-time cryptocurrency prices</p>\n      </header>\n\n      <main className=\"crypto-grid\">\n        {data?.cryptoPrices?.map((crypto) => (\n          <div key={crypto.id} className=\"crypto-card\">\n            <div className=\"crypto-header\">\n              <h2>{crypto.name}</h2>\n              <span className=\"symbol\">{crypto.symbol}</span>\n            </div>\n            <div className=\"price\">${crypto.price.toLocaleString()}</div>\n            <div className=\"last-updated\">\n              Last updated: {new Date(crypto.lastUpdated).toLocaleTimeString()}\n            </div>\n          </div>\n        ))}\n      </main>\n\n      <footer>\n        <p>Data from CoinGecko API â€¢ Updates every 30 seconds</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
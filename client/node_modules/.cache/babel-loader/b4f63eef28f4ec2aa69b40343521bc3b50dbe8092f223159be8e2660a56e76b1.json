{"ast":null,"code":"var _jsxFileName = \"/Users/omribakish/Desktop/CryptoGraphQL/client/src/components/SkeletonCryptoCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkeletonCryptoCard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"skeleton-card\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeleton skeleton-crypto-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"1rem\",\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skeleton skeleton-text-small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skeleton skeleton-price\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skeleton skeleton-text-small\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = SkeletonCryptoCard;\nexport default SkeletonCryptoCard;\nvar _c;\n$RefreshReg$(_c, \"SkeletonCryptoCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SkeletonCryptoCard","className","children","style","display","alignItems","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","flex","_c","$RefreshReg$"],"sources":["/Users/omribakish/Desktop/CryptoGraphQL/client/src/components/SkeletonCryptoCard.js"],"sourcesContent":["import React from \"react\";\n\nconst SkeletonCryptoCard = () => (\n  <div className=\"skeleton-card\">\n    <div\n      style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"1rem\" }}\n    >\n      <div className=\"skeleton skeleton-crypto-icon\"></div>\n      <div style={{ marginLeft: \"1rem\", flex: 1 }}>\n        <div className=\"skeleton skeleton-text\"></div>\n        <div className=\"skeleton skeleton-text-small\"></div>\n      </div>\n    </div>\n    <div className=\"skeleton skeleton-price\"></div>\n    <div className=\"skeleton skeleton-text-small\"></div>\n  </div>\n);\n\nexport default SkeletonCryptoCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAA,kBACzBD,OAAA;EAAKE,SAAS,EAAC,eAAe;EAAAC,QAAA,gBAC5BH,OAAA;IACEI,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAJ,QAAA,gBAEvEH,OAAA;MAAKE,SAAS,EAAC;IAA+B;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDX,OAAA;MAAKI,KAAK,EAAE;QAAEQ,UAAU,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAE,CAAE;MAAAV,QAAA,gBAC1CH,OAAA;QAAKE,SAAS,EAAC;MAAwB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9CX,OAAA;QAAKE,SAAS,EAAC;MAA8B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,eACNX,OAAA;IAAKE,SAAS,EAAC;EAAyB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAC/CX,OAAA;IAAKE,SAAS,EAAC;EAA8B;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACjD,CACN;AAACG,EAAA,GAdIb,kBAAkB;AAgBxB,eAAeA,kBAAkB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
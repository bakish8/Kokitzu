{"ast":null,"code":"var _jsxFileName = \"/Users/omribakish/Desktop/CryptoGraphQL/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, Suspense, lazy } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Import components\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport AuthModal from \"./components/AuthModal\";\nimport Navigation from \"./components/Navigation\";\nimport LiveMarketData from \"./components/LiveMarketData\";\nimport BinaryOptions from \"./components/BinaryOptions\";\nimport Portfolio from \"./components/Portfolio\";\nimport BetConfirmationModal from \"./components/BetConfirmationModal\";\n\n// Import hooks\nimport usePerformanceMonitor from \"./hooks/usePerformanceMonitor\";\n\n// Import GraphQL queries and mutations\nimport { GET_CRYPTO_PRICES, GET_COINS, GET_USER_STATS, GET_ACTIVE_BETS, GET_BET_HISTORY, PLACE_BET, REGISTER, LOGIN } from \"./graphql/queries\";\n\n// Import constants\nimport { TIMEFRAMES } from \"./constants/timeframes\";\n\n// Lazy load components for better performance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkeletonCryptoCard = /*#__PURE__*/lazy(_c = () => import(\"./components/SkeletonCryptoCard\"));\n_c2 = SkeletonCryptoCard;\nconst SkeletonStats = /*#__PURE__*/lazy(_c3 = () => import(\"./components/SkeletonStats\"));\n_c4 = SkeletonStats;\nconst backgroundStyle = {\n  backgroundImage: `url(${process.env.PUBLIC_URL}/images/backgroundImage.png)`,\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  minHeight: \"100vh\"\n};\nfunction App() {\n  _s();\n  var _getCurrentCrypto, _getCurrentCrypto2;\n  // Performance monitoring\n  usePerformanceMonitor();\n\n  // Optimized state management\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [previousPrices, setPreviousPrices] = useState({});\n  const [selectedCrypto, setSelectedCrypto] = useState(null);\n  const [selectedTimeframe, setSelectedTimeframe] = useState(\"FIVE_MINUTES\");\n  const [betAmount, setBetAmount] = useState(100);\n  const [betType, setBetType] = useState(\"UP\");\n  const [showBetModal, setShowBetModal] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"prices\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n  const [authModalOpen, setAuthModalOpen] = useState(false);\n  const [authMode, setAuthMode] = useState(\"login\");\n  const [authError, setAuthError] = useState(\"\");\n  const [authLoading, setAuthLoading] = useState(false);\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n    return token && user ? JSON.parse(user) : null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || \"\");\n  const userId = (user === null || user === void 0 ? void 0 : user.id) || \"user-1\";\n\n  // Apollo auth link\n  const httpLink = createHttpLink({\n    uri: \"http://localhost:4000/graphql\"\n  });\n  const authLink = setContext((_, {\n    headers\n  }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    };\n  });\n  const apolloClient = useMemo(() => new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  }), [token]);\n\n  // Register/Login mutations\n  const [registerMutation] = useMutation(REGISTER, {\n    client: apolloClient\n  });\n  const [loginMutation] = useMutation(LOGIN, {\n    client: apolloClient\n  });\n\n  // Auth handlers\n  const handleAuth = async (username, password) => {\n    setAuthError(\"\");\n    setAuthLoading(true);\n    try {\n      if (authMode === \"register\") {\n        await registerMutation({\n          variables: {\n            username,\n            password\n          }\n        });\n        setAuthMode(\"login\");\n        setAuthLoading(false);\n        setAuthError(\"Registration successful! Please log in.\");\n        return;\n      } else {\n        const {\n          data\n        } = await loginMutation({\n          variables: {\n            username,\n            password\n          }\n        });\n\n        // Create user object with proper balance\n        const userData = {\n          ...data.login.user,\n          balance: data.login.user.balance || 10000 // Default balance if not provided\n        };\n        setUser(userData);\n        setToken(data.login.token);\n        localStorage.setItem(\"token\", data.login.token);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        setAuthModalOpen(false);\n      }\n    } catch (e) {\n      setAuthError(e.message);\n    } finally {\n      setAuthLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setToken(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n\n  // Show modal if not logged in\n  useEffect(() => {\n    if (!user) setAuthModalOpen(true);\n  }, [user]);\n\n  // Optimized queries with better caching\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CRYPTO_PRICES, {\n    pollInterval: 30000,\n    notifyOnNetworkStatusChange: true,\n    errorPolicy: \"all\"\n  });\n  const {\n    data: coinsData,\n    loading: coinsLoading\n  } = useQuery(GET_COINS, {\n    errorPolicy: \"all\"\n  });\n  const {\n    data: userStats\n  } = useQuery(GET_USER_STATS, {\n    variables: {\n      userId\n    },\n    pollInterval: 10000,\n    errorPolicy: \"all\"\n  });\n  const {\n    data: activeBetsData\n  } = useQuery(GET_ACTIVE_BETS, {\n    variables: {\n      userId\n    },\n    pollInterval: 5000,\n    errorPolicy: \"all\"\n  });\n  const {\n    data: betHistoryData,\n    loading: betHistoryLoading\n  } = useQuery(GET_BET_HISTORY, {\n    variables: {\n      userId\n    },\n    pollInterval: 10000,\n    errorPolicy: \"all\"\n  });\n  const [placeBet] = useMutation(PLACE_BET, {\n    refetchQueries: [{\n      query: GET_USER_STATS,\n      variables: {\n        userId\n      }\n    }, {\n      query: GET_ACTIVE_BETS,\n      variables: {\n        userId\n      }\n    }],\n    onError: error => {\n      console.error(\"Bet placement error:\", error);\n    }\n  });\n\n  // Optimized animated prices with useMemo\n  const animatedPrices = useMemo(() => {\n    if (!(data !== null && data !== void 0 && data.cryptoPrices)) return [];\n    return data.cryptoPrices.map(crypto => crypto.price);\n  }, [data === null || data === void 0 ? void 0 : data.cryptoPrices]);\n\n  // Memoized filtered crypto data\n  const filteredCryptoData = useMemo(() => {\n    if (!(data !== null && data !== void 0 && data.cryptoPrices)) return [];\n    return data.cryptoPrices.filter(crypto => searchQuery === \"\" || crypto.name.toLowerCase().includes(searchQuery.toLowerCase()) || crypto.symbol.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [data === null || data === void 0 ? void 0 : data.cryptoPrices, searchQuery]);\n\n  // Optimized handlers with useCallback\n  const handleRefresh = useCallback(async () => {\n    performance.mark(\"refresh-start\");\n    setIsRefreshing(true);\n    try {\n      await refetch();\n    } catch (error) {\n      console.error(\"Refresh error:\", error);\n    } finally {\n      setTimeout(() => {\n        setIsRefreshing(false);\n        performance.mark(\"refresh-end\");\n        performance.measure(\"refresh-duration\", \"refresh-start\", \"refresh-end\");\n      }, 1000);\n    }\n  }, [refetch]);\n  const handlePlaceBet = useCallback(async () => {\n    try {\n      await placeBet({\n        variables: {\n          input: {\n            cryptoSymbol: selectedCrypto,\n            betType: betType,\n            amount: parseFloat(betAmount),\n            timeframe: selectedTimeframe\n          }\n        }\n      });\n      setShowBetModal(false);\n      setBetAmount(100);\n    } catch (error) {\n      console.error(\"Error placing bet:\", error);\n      alert(error.message);\n    }\n  }, [placeBet, selectedCrypto, betType, betAmount, selectedTimeframe]);\n  const getPriceChange = useCallback((symbol, currentPrice) => {\n    const previousPrice = previousPrices[symbol];\n    if (!previousPrice || previousPrice === currentPrice) return null;\n    return {\n      direction: currentPrice > previousPrice ? \"up\" : \"down\",\n      percentage: ((currentPrice - previousPrice) / previousPrice * 100).toFixed(2)\n    };\n  }, [previousPrices]);\n\n  // Preload critical resources\n  useEffect(() => {\n    const preloadImage = new Image();\n    preloadImage.src = `${process.env.PUBLIC_URL}/images/backgroundImage.png`;\n  }, []);\n\n  // Optimized price tracking\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data.cryptoPrices) {\n      setPreviousPrices(prev => {\n        const newPrices = {};\n        data.cryptoPrices.forEach(crypto => {\n          newPrices[crypto.symbol] = prev[crypto.symbol] || crypto.price;\n        });\n        return newPrices;\n      });\n    }\n  }, [data]);\n\n  // Set default selected crypto when coins load\n  useEffect(() => {\n    var _coinsData$coins;\n    if (!selectedCrypto && (coinsData === null || coinsData === void 0 ? void 0 : (_coinsData$coins = coinsData.coins) === null || _coinsData$coins === void 0 ? void 0 : _coinsData$coins.length) > 0) {\n      setSelectedCrypto(coinsData.coins[0].symbol);\n    }\n  }, [coinsData, selectedCrypto]);\n\n  // Helper for timer with memoization\n  const getTimeLeft = useCallback(expiresAt => {\n    const now = new Date();\n    const expiry = new Date(expiresAt);\n    const diff = expiry - now;\n    if (diff <= 0) return \"Expired\";\n    const min = Math.floor(diff / 60000);\n    const sec = Math.floor(diff % 60000 / 1000);\n    return `${min}:${sec.toString().padStart(2, \"0\")}`;\n  }, []);\n  const getCurrentCrypto = useCallback(() => {\n    var _data$cryptoPrices;\n    return data === null || data === void 0 ? void 0 : (_data$cryptoPrices = data.cryptoPrices) === null || _data$cryptoPrices === void 0 ? void 0 : _data$cryptoPrices.find(crypto => crypto.symbol === selectedCrypto);\n  }, [data, selectedCrypto]);\n  const getSelectedTimeframeInfo = useCallback(() => {\n    return TIMEFRAMES.find(tf => tf.value === selectedTimeframe);\n  }, [selectedTimeframe]);\n\n  // Timer update for Active Bets\n  const [, setTimerTick] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimerTick(tick => tick + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Error handling\n  if (error && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${isDarkMode ? \"dark\" : \"light\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kokitzu-logo\",\n          children: \"Kokitzu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Connection Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRefresh,\n            className: \"retry-button\",\n            children: \"Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: apolloClient,\n    children: [authModalOpen && /*#__PURE__*/_jsxDEV(AuthModal, {\n      mode: authMode,\n      setMode: setAuthMode,\n      onSubmit: handleAuth,\n      error: authError,\n      loading: authLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: backgroundStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"fixed\",\n              top: 0,\n              left: 0,\n              width: \"100vw\",\n              height: \"100vh\",\n              zIndex: 0,\n              pointerEvents: \"none\",\n              background: isDarkMode ? \"rgba(0,0,0,0.5)\" : \"rgba(255,255,255,0.9)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `app ${isDarkMode ? \"dark\" : \"light\"}`,\n            children: [/*#__PURE__*/_jsxDEV(Navigation, {\n              isDarkMode: isDarkMode,\n              setIsDarkMode: setIsDarkMode,\n              isRefreshing: isRefreshing,\n              handleRefresh: handleRefresh,\n              user: user,\n              handleLogout: handleLogout,\n              setAuthModalOpen: setAuthModalOpen,\n              isMobileNavOpen: isMobileNavOpen,\n              setActiveTab: setActiveTab\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n              className: \"main-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"breadcrumb\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"breadcrumb-item\",\n                  children: \"Kokitzu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"breadcrumb-item active\",\n                  children: [window.location.pathname === \"/\" && \"Live Prices\", window.location.pathname === \"/betting\" && \"Binary Options\", window.location.pathname === \"/portfolio\" && \"Portfolio\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this), window.location.pathname === \"/\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"search-icon\",\n                  width: \"20\",\n                  height: \"20\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                    cx: \"11\",\n                    cy: \"11\",\n                    r: \"8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M21 21l-4.35-4.35\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"search-input\",\n                  placeholder: \"Search cryptocurrencies...\",\n                  value: searchQuery,\n                  onChange: e => setSearchQuery(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Routes, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/\",\n                  element: /*#__PURE__*/_jsxDEV(LiveMarketData, {\n                    filteredCryptoData: filteredCryptoData,\n                    loading: loading,\n                    SkeletonCryptoCard: SkeletonCryptoCard,\n                    getPriceChange: getPriceChange,\n                    animatedPrices: animatedPrices,\n                    setSelectedCrypto: setSelectedCrypto,\n                    setBetType: setBetType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/betting\",\n                  element: /*#__PURE__*/_jsxDEV(BinaryOptions, {\n                    coinsData: coinsData,\n                    data: data,\n                    loading: loading,\n                    SkeletonCryptoCard: SkeletonCryptoCard,\n                    selectedCrypto: selectedCrypto,\n                    setSelectedCrypto: setSelectedCrypto,\n                    selectedTimeframe: selectedTimeframe,\n                    setSelectedTimeframe: setSelectedTimeframe,\n                    betAmount: betAmount,\n                    setBetAmount: setBetAmount,\n                    betType: betType,\n                    setBetType: setBetType,\n                    getSelectedTimeframeInfo: getSelectedTimeframeInfo,\n                    handlePlaceBet: handlePlaceBet,\n                    showBetModal: showBetModal,\n                    setShowBetModal: setShowBetModal,\n                    getPriceChange: getPriceChange,\n                    animatedPrices: animatedPrices,\n                    activeBetsData: activeBetsData,\n                    getTimeLeft: getTimeLeft,\n                    currentPrice: (_getCurrentCrypto = getCurrentCrypto()) === null || _getCurrentCrypto === void 0 ? void 0 : _getCurrentCrypto.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/portfolio\",\n                  element: /*#__PURE__*/_jsxDEV(Portfolio, {\n                    userStats: userStats,\n                    betHistoryLoading: betHistoryLoading,\n                    betHistoryData: betHistoryData,\n                    getTimeLeft: getTimeLeft,\n                    currentPrice: (_getCurrentCrypto2 = getCurrentCrypto()) === null || _getCurrentCrypto2 === void 0 ? void 0 : _getCurrentCrypto2.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BetConfirmationModal, {\n              showBetModal: showBetModal,\n              setShowBetModal: setShowBetModal,\n              selectedCrypto: selectedCrypto,\n              betType: betType,\n              betAmount: betAmount,\n              getSelectedTimeframeInfo: getSelectedTimeframeInfo,\n              handlePlaceBet: handlePlaceBet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"footer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"footer-links\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Powered by CoinGecko\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Binary Options Trading\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LHsRqczyIeE7claSLtef2vbKTek=\", false, function () {\n  return [usePerformanceMonitor, useMutation, useMutation, useQuery, useQuery, useQuery, useQuery, useQuery, useMutation];\n});\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SkeletonCryptoCard$lazy\");\n$RefreshReg$(_c2, \"SkeletonCryptoCard\");\n$RefreshReg$(_c3, \"SkeletonStats$lazy\");\n$RefreshReg$(_c4, \"SkeletonStats\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Suspense","lazy","useQuery","useMutation","BrowserRouter","Router","Routes","Route","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","ErrorBoundary","AuthModal","Navigation","LiveMarketData","BinaryOptions","Portfolio","BetConfirmationModal","usePerformanceMonitor","GET_CRYPTO_PRICES","GET_COINS","GET_USER_STATS","GET_ACTIVE_BETS","GET_BET_HISTORY","PLACE_BET","REGISTER","LOGIN","TIMEFRAMES","jsxDEV","_jsxDEV","SkeletonCryptoCard","_c","_c2","SkeletonStats","_c3","_c4","backgroundStyle","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","App","_s","_getCurrentCrypto","_getCurrentCrypto2","isDarkMode","setIsDarkMode","isRefreshing","setIsRefreshing","previousPrices","setPreviousPrices","selectedCrypto","setSelectedCrypto","selectedTimeframe","setSelectedTimeframe","betAmount","setBetAmount","betType","setBetType","showBetModal","setShowBetModal","activeTab","setActiveTab","searchQuery","setSearchQuery","isMobileNavOpen","setIsMobileNavOpen","authModalOpen","setAuthModalOpen","authMode","setAuthMode","authError","setAuthError","authLoading","setAuthLoading","user","setUser","token","localStorage","getItem","JSON","parse","setToken","userId","id","httpLink","uri","authLink","_","headers","authorization","apolloClient","link","concat","cache","registerMutation","client","loginMutation","handleAuth","username","password","variables","data","userData","login","balance","setItem","stringify","e","message","handleLogout","removeItem","loading","error","refetch","pollInterval","notifyOnNetworkStatusChange","errorPolicy","coinsData","coinsLoading","userStats","activeBetsData","betHistoryData","betHistoryLoading","placeBet","refetchQueries","query","onError","console","animatedPrices","cryptoPrices","map","crypto","price","filteredCryptoData","filter","name","toLowerCase","includes","symbol","handleRefresh","performance","mark","setTimeout","measure","handlePlaceBet","input","cryptoSymbol","amount","parseFloat","timeframe","alert","getPriceChange","currentPrice","previousPrice","direction","percentage","toFixed","preloadImage","Image","src","prev","newPrices","forEach","_coinsData$coins","coins","length","getTimeLeft","expiresAt","now","Date","expiry","diff","min","Math","floor","sec","toString","padStart","getCurrentCrypto","_data$cryptoPrices","find","getSelectedTimeframeInfo","tf","value","setTimerTick","interval","setInterval","tick","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mode","setMode","onSubmit","style","position","top","left","width","height","zIndex","pointerEvents","background","window","location","pathname","viewBox","fill","stroke","strokeWidth","cx","cy","r","d","type","placeholder","onChange","target","path","element","_c5","$RefreshReg$"],"sources":["/Users/omribakish/Desktop/CryptoGraphQL/client/src/App.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  Suspense,\n  lazy,\n} from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Import components\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport AuthModal from \"./components/AuthModal\";\nimport Navigation from \"./components/Navigation\";\nimport LiveMarketData from \"./components/LiveMarketData\";\nimport BinaryOptions from \"./components/BinaryOptions\";\nimport Portfolio from \"./components/Portfolio\";\nimport BetConfirmationModal from \"./components/BetConfirmationModal\";\n\n// Import hooks\nimport usePerformanceMonitor from \"./hooks/usePerformanceMonitor\";\n\n// Import GraphQL queries and mutations\nimport {\n  GET_CRYPTO_PRICES,\n  GET_COINS,\n  GET_USER_STATS,\n  GET_ACTIVE_BETS,\n  GET_BET_HISTORY,\n  PLACE_BET,\n  REGISTER,\n  LOGIN,\n} from \"./graphql/queries\";\n\n// Import constants\nimport { TIMEFRAMES } from \"./constants/timeframes\";\n\n// Lazy load components for better performance\nconst SkeletonCryptoCard = lazy(() =>\n  import(\"./components/SkeletonCryptoCard\")\n);\nconst SkeletonStats = lazy(() => import(\"./components/SkeletonStats\"));\n\nconst backgroundStyle = {\n  backgroundImage: `url(${process.env.PUBLIC_URL}/images/backgroundImage.png)`,\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  minHeight: \"100vh\",\n};\n\nfunction App() {\n  // Performance monitoring\n  usePerformanceMonitor();\n\n  // Optimized state management\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [previousPrices, setPreviousPrices] = useState({});\n  const [selectedCrypto, setSelectedCrypto] = useState(null);\n  const [selectedTimeframe, setSelectedTimeframe] = useState(\"FIVE_MINUTES\");\n  const [betAmount, setBetAmount] = useState(100);\n  const [betType, setBetType] = useState(\"UP\");\n  const [showBetModal, setShowBetModal] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"prices\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n  const [authModalOpen, setAuthModalOpen] = useState(false);\n  const [authMode, setAuthMode] = useState(\"login\");\n  const [authError, setAuthError] = useState(\"\");\n  const [authLoading, setAuthLoading] = useState(false);\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n    return token && user ? JSON.parse(user) : null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || \"\");\n\n  const userId = user?.id || \"user-1\";\n\n  // Apollo auth link\n  const httpLink = createHttpLink({ uri: \"http://localhost:4000/graphql\" });\n  const authLink = setContext((_, { headers }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  });\n  const apolloClient = useMemo(\n    () =>\n      new ApolloClient({\n        link: authLink.concat(httpLink),\n        cache: new InMemoryCache(),\n      }),\n    [token]\n  );\n\n  // Register/Login mutations\n  const [registerMutation] = useMutation(REGISTER, { client: apolloClient });\n  const [loginMutation] = useMutation(LOGIN, { client: apolloClient });\n\n  // Auth handlers\n  const handleAuth = async (username, password) => {\n    setAuthError(\"\");\n    setAuthLoading(true);\n    try {\n      if (authMode === \"register\") {\n        await registerMutation({ variables: { username, password } });\n        setAuthMode(\"login\");\n        setAuthLoading(false);\n        setAuthError(\"Registration successful! Please log in.\");\n        return;\n      } else {\n        const { data } = await loginMutation({\n          variables: { username, password },\n        });\n\n        // Create user object with proper balance\n        const userData = {\n          ...data.login.user,\n          balance: data.login.user.balance || 10000, // Default balance if not provided\n        };\n\n        setUser(userData);\n        setToken(data.login.token);\n        localStorage.setItem(\"token\", data.login.token);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        setAuthModalOpen(false);\n      }\n    } catch (e) {\n      setAuthError(e.message);\n    } finally {\n      setAuthLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setToken(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n\n  // Show modal if not logged in\n  useEffect(() => {\n    if (!user) setAuthModalOpen(true);\n  }, [user]);\n\n  // Optimized queries with better caching\n  const { loading, error, data, refetch } = useQuery(GET_CRYPTO_PRICES, {\n    pollInterval: 30000,\n    notifyOnNetworkStatusChange: true,\n    errorPolicy: \"all\",\n  });\n\n  const { data: coinsData, loading: coinsLoading } = useQuery(GET_COINS, {\n    errorPolicy: \"all\",\n  });\n\n  const { data: userStats } = useQuery(GET_USER_STATS, {\n    variables: { userId },\n    pollInterval: 10000,\n    errorPolicy: \"all\",\n  });\n\n  const { data: activeBetsData } = useQuery(GET_ACTIVE_BETS, {\n    variables: { userId },\n    pollInterval: 5000,\n    errorPolicy: \"all\",\n  });\n\n  const { data: betHistoryData, loading: betHistoryLoading } = useQuery(\n    GET_BET_HISTORY,\n    {\n      variables: { userId },\n      pollInterval: 10000,\n      errorPolicy: \"all\",\n    }\n  );\n\n  const [placeBet] = useMutation(PLACE_BET, {\n    refetchQueries: [\n      { query: GET_USER_STATS, variables: { userId } },\n      { query: GET_ACTIVE_BETS, variables: { userId } },\n    ],\n    onError: (error) => {\n      console.error(\"Bet placement error:\", error);\n    },\n  });\n\n  // Optimized animated prices with useMemo\n  const animatedPrices = useMemo(() => {\n    if (!data?.cryptoPrices) return [];\n    return data.cryptoPrices.map((crypto) => crypto.price);\n  }, [data?.cryptoPrices]);\n\n  // Memoized filtered crypto data\n  const filteredCryptoData = useMemo(() => {\n    if (!data?.cryptoPrices) return [];\n    return data.cryptoPrices.filter(\n      (crypto) =>\n        searchQuery === \"\" ||\n        crypto.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        crypto.symbol.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }, [data?.cryptoPrices, searchQuery]);\n\n  // Optimized handlers with useCallback\n  const handleRefresh = useCallback(async () => {\n    performance.mark(\"refresh-start\");\n    setIsRefreshing(true);\n    try {\n      await refetch();\n    } catch (error) {\n      console.error(\"Refresh error:\", error);\n    } finally {\n      setTimeout(() => {\n        setIsRefreshing(false);\n        performance.mark(\"refresh-end\");\n        performance.measure(\"refresh-duration\", \"refresh-start\", \"refresh-end\");\n      }, 1000);\n    }\n  }, [refetch]);\n\n  const handlePlaceBet = useCallback(async () => {\n    try {\n      await placeBet({\n        variables: {\n          input: {\n            cryptoSymbol: selectedCrypto,\n            betType: betType,\n            amount: parseFloat(betAmount),\n            timeframe: selectedTimeframe,\n          },\n        },\n      });\n      setShowBetModal(false);\n      setBetAmount(100);\n    } catch (error) {\n      console.error(\"Error placing bet:\", error);\n      alert(error.message);\n    }\n  }, [placeBet, selectedCrypto, betType, betAmount, selectedTimeframe]);\n\n  const getPriceChange = useCallback(\n    (symbol, currentPrice) => {\n      const previousPrice = previousPrices[symbol];\n      if (!previousPrice || previousPrice === currentPrice) return null;\n      return {\n        direction: currentPrice > previousPrice ? \"up\" : \"down\",\n        percentage: (\n          ((currentPrice - previousPrice) / previousPrice) *\n          100\n        ).toFixed(2),\n      };\n    },\n    [previousPrices]\n  );\n\n  // Preload critical resources\n  useEffect(() => {\n    const preloadImage = new Image();\n    preloadImage.src = `${process.env.PUBLIC_URL}/images/backgroundImage.png`;\n  }, []);\n\n  // Optimized price tracking\n  useEffect(() => {\n    if (data?.cryptoPrices) {\n      setPreviousPrices((prev) => {\n        const newPrices = {};\n        data.cryptoPrices.forEach((crypto) => {\n          newPrices[crypto.symbol] = prev[crypto.symbol] || crypto.price;\n        });\n        return newPrices;\n      });\n    }\n  }, [data]);\n\n  // Set default selected crypto when coins load\n  useEffect(() => {\n    if (!selectedCrypto && coinsData?.coins?.length > 0) {\n      setSelectedCrypto(coinsData.coins[0].symbol);\n    }\n  }, [coinsData, selectedCrypto]);\n\n  // Helper for timer with memoization\n  const getTimeLeft = useCallback((expiresAt) => {\n    const now = new Date();\n    const expiry = new Date(expiresAt);\n    const diff = expiry - now;\n    if (diff <= 0) return \"Expired\";\n    const min = Math.floor(diff / 60000);\n    const sec = Math.floor((diff % 60000) / 1000);\n    return `${min}:${sec.toString().padStart(2, \"0\")}`;\n  }, []);\n\n  const getCurrentCrypto = useCallback(() => {\n    return data?.cryptoPrices?.find(\n      (crypto) => crypto.symbol === selectedCrypto\n    );\n  }, [data, selectedCrypto]);\n\n  const getSelectedTimeframeInfo = useCallback(() => {\n    return TIMEFRAMES.find((tf) => tf.value === selectedTimeframe);\n  }, [selectedTimeframe]);\n\n  // Timer update for Active Bets\n  const [, setTimerTick] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimerTick((tick) => tick + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Error handling\n  if (error && !data) {\n    return (\n      <div className={`app ${isDarkMode ? \"dark\" : \"light\"}`}>\n        <div className=\"error-container\">\n          <div className=\"kokitzu-logo\">Kokitzu</div>\n          <div className=\"error-message\">\n            <h2>Connection Error</h2>\n            <p>{error.message}</p>\n            <button onClick={handleRefresh} className=\"retry-button\">\n              Retry Connection\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      {authModalOpen && (\n        <AuthModal\n          mode={authMode}\n          setMode={setAuthMode}\n          onSubmit={handleAuth}\n          error={authError}\n          loading={authLoading}\n        />\n      )}\n      <Router>\n        <ErrorBoundary>\n          <div style={backgroundStyle}>\n            <div\n              style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                width: \"100vw\",\n                height: \"100vh\",\n                zIndex: 0,\n                pointerEvents: \"none\",\n                background: isDarkMode\n                  ? \"rgba(0,0,0,0.5)\"\n                  : \"rgba(255,255,255,0.9)\",\n              }}\n            />\n            <div className={`app ${isDarkMode ? \"dark\" : \"light\"}`}>\n              {/* Navigation */}\n              <Navigation\n                isDarkMode={isDarkMode}\n                setIsDarkMode={setIsDarkMode}\n                isRefreshing={isRefreshing}\n                handleRefresh={handleRefresh}\n                user={user}\n                handleLogout={handleLogout}\n                setAuthModalOpen={setAuthModalOpen}\n                isMobileNavOpen={isMobileNavOpen}\n                setActiveTab={setActiveTab}\n              />\n\n              {/* Main Content */}\n              <main className=\"main-content\">\n                <div className=\"breadcrumb\">\n                  <span className=\"breadcrumb-item\">Kokitzu</span>\n                  <span className=\"breadcrumb-item active\">\n                    {window.location.pathname === \"/\" && \"Live Prices\"}\n                    {window.location.pathname === \"/betting\" &&\n                      \"Binary Options\"}\n                    {window.location.pathname === \"/portfolio\" && \"Portfolio\"}\n                  </span>\n                </div>\n\n                {/* Search Functionality */}\n                {window.location.pathname === \"/\" && (\n                  <div className=\"search-container\">\n                    <svg\n                      className=\"search-icon\"\n                      width=\"20\"\n                      height=\"20\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                    >\n                      <circle cx=\"11\" cy=\"11\" r=\"8\" />\n                      <path d=\"M21 21l-4.35-4.35\" />\n                    </svg>\n                    <input\n                      type=\"text\"\n                      className=\"search-input\"\n                      placeholder=\"Search cryptocurrencies...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                    />\n                  </div>\n                )}\n\n                <Routes>\n                  <Route\n                    path=\"/\"\n                    element={\n                      <LiveMarketData\n                        filteredCryptoData={filteredCryptoData}\n                        loading={loading}\n                        SkeletonCryptoCard={SkeletonCryptoCard}\n                        getPriceChange={getPriceChange}\n                        animatedPrices={animatedPrices}\n                        setSelectedCrypto={setSelectedCrypto}\n                        setBetType={setBetType}\n                      />\n                    }\n                  />\n                  <Route\n                    path=\"/betting\"\n                    element={\n                      <BinaryOptions\n                        coinsData={coinsData}\n                        data={data}\n                        loading={loading}\n                        SkeletonCryptoCard={SkeletonCryptoCard}\n                        selectedCrypto={selectedCrypto}\n                        setSelectedCrypto={setSelectedCrypto}\n                        selectedTimeframe={selectedTimeframe}\n                        setSelectedTimeframe={setSelectedTimeframe}\n                        betAmount={betAmount}\n                        setBetAmount={setBetAmount}\n                        betType={betType}\n                        setBetType={setBetType}\n                        getSelectedTimeframeInfo={getSelectedTimeframeInfo}\n                        handlePlaceBet={handlePlaceBet}\n                        showBetModal={showBetModal}\n                        setShowBetModal={setShowBetModal}\n                        getPriceChange={getPriceChange}\n                        animatedPrices={animatedPrices}\n                        activeBetsData={activeBetsData}\n                        getTimeLeft={getTimeLeft}\n                        currentPrice={getCurrentCrypto()?.price}\n                      />\n                    }\n                  />\n                  <Route\n                    path=\"/portfolio\"\n                    element={\n                      <Portfolio\n                        userStats={userStats}\n                        betHistoryLoading={betHistoryLoading}\n                        betHistoryData={betHistoryData}\n                        getTimeLeft={getTimeLeft}\n                        currentPrice={getCurrentCrypto()?.price}\n                      />\n                    }\n                  />\n                </Routes>\n              </main>\n\n              {/* Bet Confirmation Modal */}\n              <BetConfirmationModal\n                showBetModal={showBetModal}\n                setShowBetModal={setShowBetModal}\n                selectedCrypto={selectedCrypto}\n                betType={betType}\n                betAmount={betAmount}\n                getSelectedTimeframeInfo={getSelectedTimeframeInfo}\n                handlePlaceBet={handlePlaceBet}\n              />\n\n              {/* Footer */}\n              <footer className=\"footer\">\n                <div className=\"footer-content\">\n                  <div className=\"footer-links\">\n                    <span>Powered by CoinGecko</span>\n                    <span>•</span>\n                    <span>Binary Options Trading</span>\n                  </div>\n                </div>\n              </footer>\n            </div>\n          </div>\n        </ErrorBoundary>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
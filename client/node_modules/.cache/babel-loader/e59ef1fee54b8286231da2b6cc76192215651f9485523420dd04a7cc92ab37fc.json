{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst usePerformanceMonitor = () => {\n  _s();\n  useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      const observer = new PerformanceObserver(list => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === \"measure\") {\n            console.log(`${entry.name}: ${entry.duration}ms`);\n          }\n        }\n      });\n      observer.observe({\n        entryTypes: [\"measure\"]\n      });\n      return () => observer.disconnect();\n    }\n  }, []);\n};\n_s(usePerformanceMonitor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default usePerformanceMonitor;","map":{"version":3,"names":["useEffect","usePerformanceMonitor","_s","process","env","NODE_ENV","observer","PerformanceObserver","list","entry","getEntries","entryType","console","log","name","duration","observe","entryTypes","disconnect"],"sources":["/Users/omribakish/Desktop/CryptoGraphQL/client/src/hooks/usePerformanceMonitor.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst usePerformanceMonitor = () => {\n  useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === \"measure\") {\n            console.log(`${entry.name}: ${entry.duration}ms`);\n          }\n        }\n      });\n      observer.observe({ entryTypes: [\"measure\"] });\n      return () => observer.disconnect();\n    }\n  }, []);\n};\n\nexport default usePerformanceMonitor;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClCF,SAAS,CAAC,MAAM;IACd,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1C,MAAMC,QAAQ,GAAG,IAAIC,mBAAmB,CAAEC,IAAI,IAAK;QACjD,KAAK,MAAMC,KAAK,IAAID,IAAI,CAACE,UAAU,CAAC,CAAC,EAAE;UACrC,IAAID,KAAK,CAACE,SAAS,KAAK,SAAS,EAAE;YACjCC,OAAO,CAACC,GAAG,CAAC,GAAGJ,KAAK,CAACK,IAAI,KAAKL,KAAK,CAACM,QAAQ,IAAI,CAAC;UACnD;QACF;MACF,CAAC,CAAC;MACFT,QAAQ,CAACU,OAAO,CAAC;QAAEC,UAAU,EAAE,CAAC,SAAS;MAAE,CAAC,CAAC;MAC7C,OAAO,MAAMX,QAAQ,CAACY,UAAU,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAChB,EAAA,CAdID,qBAAqB;AAgB3B,eAAeA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
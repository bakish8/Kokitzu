{"ast":null,"code":"var _jsxFileName = \"/Users/omribakish/Desktop/CryptoGraphQL/client/src/components/BetConfirmationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\n// Contract configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x1a0C27282be267d9554eA8c6cC0222a1B7B4B75d\";\nconst CONTRACT_ABI = [\"function createOption(string memory asset, uint256 amount, uint256 expiryTime, bool isCall) external payable\", \"function getCurrentPrice(string memory asset) external view returns (uint256)\", \"function assetConfigs(string) external view returns (address priceFeed, uint256 minAmount, uint256 maxAmount, uint256 feePercentage, bool isActive)\", \"event OptionCreated(uint256 indexed optionId, address indexed trader, string asset, uint256 amount, uint256 strikePrice, uint256 expiryTime, bool isCall)\"];\n\n// Timeframe mappings\nconst TIMEFRAME_SECONDS = {\n  ONE_MINUTE: 60,\n  FIVE_MINUTES: 300,\n  FIFTEEN_MINUTES: 900,\n  THIRTY_MINUTES: 1800,\n  ONE_HOUR: 3600,\n  FOUR_HOURS: 14400,\n  ONE_DAY: 86400\n};\nfunction BetConfirmationModal({\n  showBetModal,\n  setShowBetModal,\n  selectedCrypto,\n  betType,\n  betAmount,\n  getSelectedTimeframeInfo,\n  handlePlaceBet\n}) {\n  _s();\n  var _getSelectedTimeframe, _getSelectedTimeframe2;\n  const [bettingMode, setBettingMode] = useState(\"blockchain\"); // Default to blockchain\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [walletBalance, setWalletBalance] = useState(\"0\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isPlacingBet, setIsPlacingBet] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n\n  // Connect to MetaMask\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is not installed! Please install MetaMask.\");\n      return;\n    }\n    try {\n      setIsConnecting(true);\n\n      // Request account access\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // Create provider and signer\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n      setProvider(provider);\n      setSigner(signer);\n      setWalletAddress(address);\n\n      // Get balance\n      const balance = await provider.getBalance(address);\n      setWalletBalance(ethers.formatEther(balance));\n\n      // Check network\n      const network = await provider.getNetwork();\n      if (network.chainId !== 11155111n) {\n        // Sepolia chain ID\n        alert(\"Please switch to Sepolia testnet in MetaMask\");\n        return;\n      }\n      console.log(\"✅ Wallet connected:\", address);\n      console.log(\"💰 Balance:\", ethers.formatEther(balance), \"ETH\");\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n      alert(\"Failed to connect wallet: \" + error.message);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Place blockchain bet directly from user's wallet\n  const placeBlockchainBet = async () => {\n    if (!signer) {\n      alert(\"Please connect your wallet first\");\n      return;\n    }\n    try {\n      setIsPlacingBet(true);\n\n      // Convert bet amount from USD to ETH (simplified - in production you'd use a price oracle)\n      const ethAmount = (betAmount / 3000).toString(); // Assuming ETH ≈ $3000\n      const amountWei = ethers.parseEther(ethAmount);\n\n      // Get timeframe info\n      const timeframeInfo = getSelectedTimeframeInfo();\n      const timeframeKey = Object.keys(TIMEFRAME_SECONDS).find(key => timeframeInfo.label.includes(key.replace(\"_\", \" \").toLowerCase())) || \"ONE_MINUTE\";\n      const expirySeconds = TIMEFRAME_SECONDS[timeframeKey];\n\n      // Create contract instance\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n\n      // Map crypto symbol to contract asset\n      const assetMap = {\n        BTC: \"BTC\",\n        ETH: \"ETH\",\n        LINK: \"LINK\",\n        MATIC: \"MATIC\"\n      };\n      const asset = assetMap[selectedCrypto] || selectedCrypto;\n      const isCall = betType === \"UP\";\n      console.log(\"🔗 Placing bet directly from wallet:\", {\n        asset,\n        amount: ethAmount + \" ETH\",\n        expiry: expirySeconds + \" seconds\",\n        isCall: isCall\n      });\n\n      // Send transaction\n      const tx = await contract.createOption(asset, amountWei, expirySeconds, isCall, {\n        value: amountWei,\n        gasLimit: 500000\n      });\n      console.log(\"⏳ Transaction sent:\", tx.hash);\n\n      // Wait for confirmation\n      const receipt = await tx.wait();\n      console.log(\"✅ Transaction confirmed:\", receipt.hash);\n\n      // Update balance\n      const newBalance = await provider.getBalance(walletAddress);\n      setWalletBalance(ethers.formatEther(newBalance));\n\n      // Parse events to get option ID\n      const optionCreatedEvent = receipt.logs.find(log => {\n        try {\n          const parsed = contract.interface.parseLog(log);\n          return parsed.name === \"OptionCreated\";\n        } catch {\n          return false;\n        }\n      });\n      let optionId = null;\n      if (optionCreatedEvent) {\n        const parsed = contract.interface.parseLog(optionCreatedEvent);\n        optionId = parsed.args.optionId.toString();\n        console.log(\"🎲 Option created with ID:\", optionId);\n      }\n\n      // Close modal\n      setShowBetModal(false);\n      alert(`Bet placed successfully! Transaction: ${tx.hash}`);\n    } catch (error) {\n      console.error(\"Failed to place bet:\", error);\n      alert(\"Failed to place bet: \" + error.message);\n    } finally {\n      setIsPlacingBet(false);\n    }\n  };\n\n  // Handle bet confirmation\n  const handleConfirmBet = () => {\n    if (bettingMode === \"blockchain\") {\n      placeBlockchainBet();\n    } else {\n      console.log(\"💾 Placing LEGACY bet\");\n      handlePlaceBet(false, null);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setWalletAddress(\"\");\n    setWalletBalance(\"0\");\n    setProvider(null);\n    setSigner(null);\n  };\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          connectWallet();\n        }\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners(\"accountsChanged\");\n        window.ethereum.removeAllListeners(\"chainChanged\");\n      }\n    };\n  }, []);\n  if (!showBetModal) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: () => setShowBetModal(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Confirm Your Bet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cryptocurrency:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedCrypto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Direction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `direction ${betType.toLowerCase()}`,\n            children: betType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Timeframe:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_getSelectedTimeframe = getSelectedTimeframeInfo()) === null || _getSelectedTimeframe === void 0 ? void 0 : _getSelectedTimeframe.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", betAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Potential Payout:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", (betAmount * parseFloat((_getSelectedTimeframe2 = getSelectedTimeframeInfo()) === null || _getSelectedTimeframe2 === void 0 ? void 0 : _getSelectedTimeframe2.payout.replace(\"x\", \"\"))).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Betting Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"betting-mode-selection\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: `mode-option ${bettingMode === \"legacy\" ? \"active\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"legacy\",\n                checked: bettingMode === \"legacy\",\n                onChange: e => setBettingMode(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), \"\\uD83D\\uDCBE Legacy (In-Memory)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `mode-option ${bettingMode === \"blockchain\" ? \"active\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"blockchain\",\n                checked: bettingMode === \"blockchain\",\n                onChange: e => setBettingMode(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), \"\\uD83D\\uDD17 Blockchain (Real ETH)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), bettingMode === \"blockchain\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wallet:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-section\",\n            children: !walletAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: connectWallet,\n              disabled: isConnecting,\n              className: \"connect-wallet-btn\",\n              children: isConnecting ? \"Connecting...\" : \"🦊 Connect MetaMask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wallet-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wallet-address\",\n                children: [walletAddress.slice(0, 6), \"...\", walletAddress.slice(-4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wallet-balance\",\n                children: [\"Balance: \", parseFloat(walletBalance).toFixed(4), \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: disconnectWallet,\n                className: \"disconnect-btn\",\n                children: \"Disconnect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: \"#666\",\n              fontSize: \"10px\"\n            },\n            children: \"\\u26A0\\uFE0F Make sure you have Sepolia ETH for gas fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => setShowBetModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-btn\",\n          onClick: handleConfirmBet,\n          disabled: isPlacingBet || bettingMode === \"blockchain\" && !walletAddress,\n          children: isPlacingBet ? \"Placing Bet...\" : bettingMode === \"blockchain\" ? \"🔗 Place Real ETH Bet\" : \"💾 Place Demo Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(BetConfirmationModal, \"WBWSIDpXZwt643g0NuGn6LyuRAk=\");\n_c = BetConfirmationModal;\nexport default BetConfirmationModal;\nvar _c;\n$RefreshReg$(_c, \"BetConfirmationModal\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","CONTRACT_ABI","TIMEFRAME_SECONDS","ONE_MINUTE","FIVE_MINUTES","FIFTEEN_MINUTES","THIRTY_MINUTES","ONE_HOUR","FOUR_HOURS","ONE_DAY","BetConfirmationModal","showBetModal","setShowBetModal","selectedCrypto","betType","betAmount","getSelectedTimeframeInfo","handlePlaceBet","_s","_getSelectedTimeframe","_getSelectedTimeframe2","bettingMode","setBettingMode","walletAddress","setWalletAddress","walletBalance","setWalletBalance","isConnecting","setIsConnecting","isPlacingBet","setIsPlacingBet","provider","setProvider","signer","setSigner","connectWallet","window","ethereum","alert","request","method","BrowserProvider","getSigner","address","getAddress","balance","getBalance","formatEther","network","getNetwork","chainId","console","log","error","message","placeBlockchainBet","ethAmount","toString","amountWei","parseEther","timeframeInfo","timeframeKey","Object","keys","find","key","label","includes","replace","toLowerCase","expirySeconds","contract","Contract","assetMap","BTC","ETH","LINK","MATIC","asset","isCall","amount","expiry","tx","createOption","value","gasLimit","hash","receipt","wait","newBalance","optionCreatedEvent","logs","parsed","interface","parseLog","name","optionId","args","handleConfirmBet","disconnectWallet","on","accounts","length","location","reload","removeAllListeners","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","parseFloat","payout","toFixed","type","checked","onChange","target","disabled","slice","style","color","fontSize","_c","$RefreshReg$"],"sources":["/Users/omribakish/Desktop/CryptoGraphQL/client/src/components/BetConfirmationModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\n// Contract configuration\nconst CONTRACT_ADDRESS = \"0x1a0C27282be267d9554eA8c6cC0222a1B7B4B75d\";\nconst CONTRACT_ABI = [\n  \"function createOption(string memory asset, uint256 amount, uint256 expiryTime, bool isCall) external payable\",\n  \"function getCurrentPrice(string memory asset) external view returns (uint256)\",\n  \"function assetConfigs(string) external view returns (address priceFeed, uint256 minAmount, uint256 maxAmount, uint256 feePercentage, bool isActive)\",\n  \"event OptionCreated(uint256 indexed optionId, address indexed trader, string asset, uint256 amount, uint256 strikePrice, uint256 expiryTime, bool isCall)\",\n];\n\n// Timeframe mappings\nconst TIMEFRAME_SECONDS = {\n  ONE_MINUTE: 60,\n  FIVE_MINUTES: 300,\n  FIFTEEN_MINUTES: 900,\n  THIRTY_MINUTES: 1800,\n  ONE_HOUR: 3600,\n  FOUR_HOURS: 14400,\n  ONE_DAY: 86400,\n};\n\nfunction BetConfirmationModal({\n  showBetModal,\n  setShowBetModal,\n  selectedCrypto,\n  betType,\n  betAmount,\n  getSelectedTimeframeInfo,\n  handlePlaceBet,\n}) {\n  const [bettingMode, setBettingMode] = useState(\"blockchain\"); // Default to blockchain\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [walletBalance, setWalletBalance] = useState(\"0\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isPlacingBet, setIsPlacingBet] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n\n  // Connect to MetaMask\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is not installed! Please install MetaMask.\");\n      return;\n    }\n\n    try {\n      setIsConnecting(true);\n\n      // Request account access\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n\n      // Create provider and signer\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n\n      setProvider(provider);\n      setSigner(signer);\n      setWalletAddress(address);\n\n      // Get balance\n      const balance = await provider.getBalance(address);\n      setWalletBalance(ethers.formatEther(balance));\n\n      // Check network\n      const network = await provider.getNetwork();\n      if (network.chainId !== 11155111n) {\n        // Sepolia chain ID\n        alert(\"Please switch to Sepolia testnet in MetaMask\");\n        return;\n      }\n\n      console.log(\"✅ Wallet connected:\", address);\n      console.log(\"💰 Balance:\", ethers.formatEther(balance), \"ETH\");\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n      alert(\"Failed to connect wallet: \" + error.message);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  // Place blockchain bet directly from user's wallet\n  const placeBlockchainBet = async () => {\n    if (!signer) {\n      alert(\"Please connect your wallet first\");\n      return;\n    }\n\n    try {\n      setIsPlacingBet(true);\n\n      // Convert bet amount from USD to ETH (simplified - in production you'd use a price oracle)\n      const ethAmount = (betAmount / 3000).toString(); // Assuming ETH ≈ $3000\n      const amountWei = ethers.parseEther(ethAmount);\n\n      // Get timeframe info\n      const timeframeInfo = getSelectedTimeframeInfo();\n      const timeframeKey =\n        Object.keys(TIMEFRAME_SECONDS).find((key) =>\n          timeframeInfo.label.includes(key.replace(\"_\", \" \").toLowerCase())\n        ) || \"ONE_MINUTE\";\n      const expirySeconds = TIMEFRAME_SECONDS[timeframeKey];\n\n      // Create contract instance\n      const contract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        CONTRACT_ABI,\n        signer\n      );\n\n      // Map crypto symbol to contract asset\n      const assetMap = {\n        BTC: \"BTC\",\n        ETH: \"ETH\",\n        LINK: \"LINK\",\n        MATIC: \"MATIC\",\n      };\n      const asset = assetMap[selectedCrypto] || selectedCrypto;\n      const isCall = betType === \"UP\";\n\n      console.log(\"🔗 Placing bet directly from wallet:\", {\n        asset,\n        amount: ethAmount + \" ETH\",\n        expiry: expirySeconds + \" seconds\",\n        isCall: isCall,\n      });\n\n      // Send transaction\n      const tx = await contract.createOption(\n        asset,\n        amountWei,\n        expirySeconds,\n        isCall,\n        {\n          value: amountWei,\n          gasLimit: 500000,\n        }\n      );\n\n      console.log(\"⏳ Transaction sent:\", tx.hash);\n\n      // Wait for confirmation\n      const receipt = await tx.wait();\n      console.log(\"✅ Transaction confirmed:\", receipt.hash);\n\n      // Update balance\n      const newBalance = await provider.getBalance(walletAddress);\n      setWalletBalance(ethers.formatEther(newBalance));\n\n      // Parse events to get option ID\n      const optionCreatedEvent = receipt.logs.find((log) => {\n        try {\n          const parsed = contract.interface.parseLog(log);\n          return parsed.name === \"OptionCreated\";\n        } catch {\n          return false;\n        }\n      });\n\n      let optionId = null;\n      if (optionCreatedEvent) {\n        const parsed = contract.interface.parseLog(optionCreatedEvent);\n        optionId = parsed.args.optionId.toString();\n        console.log(\"🎲 Option created with ID:\", optionId);\n      }\n\n      // Close modal\n      setShowBetModal(false);\n\n      alert(`Bet placed successfully! Transaction: ${tx.hash}`);\n    } catch (error) {\n      console.error(\"Failed to place bet:\", error);\n      alert(\"Failed to place bet: \" + error.message);\n    } finally {\n      setIsPlacingBet(false);\n    }\n  };\n\n  // Handle bet confirmation\n  const handleConfirmBet = () => {\n    if (bettingMode === \"blockchain\") {\n      placeBlockchainBet();\n    } else {\n      console.log(\"💾 Placing LEGACY bet\");\n      handlePlaceBet(false, null);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setWalletAddress(\"\");\n    setWalletBalance(\"0\");\n    setProvider(null);\n    setSigner(null);\n  };\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          connectWallet();\n        }\n      });\n\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners(\"accountsChanged\");\n        window.ethereum.removeAllListeners(\"chainChanged\");\n      }\n    };\n  }, []);\n\n  if (!showBetModal) return null;\n\n  return (\n    <div className=\"modal-overlay\" onClick={() => setShowBetModal(false)}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <h3>Confirm Your Bet</h3>\n        <div className=\"bet-confirmation\">\n          <div className=\"confirmation-item\">\n            <span>Cryptocurrency:</span>\n            <span>{selectedCrypto}</span>\n          </div>\n          <div className=\"confirmation-item\">\n            <span>Direction:</span>\n            <span className={`direction ${betType.toLowerCase()}`}>\n              {betType}\n            </span>\n          </div>\n          <div className=\"confirmation-item\">\n            <span>Timeframe:</span>\n            <span>{getSelectedTimeframeInfo()?.label}</span>\n          </div>\n          <div className=\"confirmation-item\">\n            <span>Amount:</span>\n            <span>${betAmount}</span>\n          </div>\n          <div className=\"confirmation-item\">\n            <span>Potential Payout:</span>\n            <span>\n              $\n              {(\n                betAmount *\n                parseFloat(getSelectedTimeframeInfo()?.payout.replace(\"x\", \"\"))\n              ).toFixed(2)}\n            </span>\n          </div>\n\n          {/* Betting Mode Selection */}\n          <div className=\"confirmation-item\">\n            <span>Betting Mode:</span>\n            <div className=\"betting-mode-selection\">\n              <label\n                className={`mode-option ${\n                  bettingMode === \"legacy\" ? \"active\" : \"\"\n                }`}\n              >\n                <input\n                  type=\"radio\"\n                  value=\"legacy\"\n                  checked={bettingMode === \"legacy\"}\n                  onChange={(e) => setBettingMode(e.target.value)}\n                />\n                💾 Legacy (In-Memory)\n              </label>\n              <label\n                className={`mode-option ${\n                  bettingMode === \"blockchain\" ? \"active\" : \"\"\n                }`}\n              >\n                <input\n                  type=\"radio\"\n                  value=\"blockchain\"\n                  checked={bettingMode === \"blockchain\"}\n                  onChange={(e) => setBettingMode(e.target.value)}\n                />\n                🔗 Blockchain (Real ETH)\n              </label>\n            </div>\n          </div>\n\n          {/* Wallet Connection (only show for blockchain mode) */}\n          {bettingMode === \"blockchain\" && (\n            <div className=\"confirmation-item\">\n              <span>Wallet:</span>\n              <div className=\"wallet-section\">\n                {!walletAddress ? (\n                  <button\n                    onClick={connectWallet}\n                    disabled={isConnecting}\n                    className=\"connect-wallet-btn\"\n                  >\n                    {isConnecting ? \"Connecting...\" : \"🦊 Connect MetaMask\"}\n                  </button>\n                ) : (\n                  <div className=\"wallet-info\">\n                    <div className=\"wallet-address\">\n                      {walletAddress.slice(0, 6)}...{walletAddress.slice(-4)}\n                    </div>\n                    <div className=\"wallet-balance\">\n                      Balance: {parseFloat(walletBalance).toFixed(4)} ETH\n                    </div>\n                    <button\n                      onClick={disconnectWallet}\n                      className=\"disconnect-btn\"\n                    >\n                      Disconnect\n                    </button>\n                  </div>\n                )}\n              </div>\n              <small style={{ color: \"#666\", fontSize: \"10px\" }}>\n                ⚠️ Make sure you have Sepolia ETH for gas fees\n              </small>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-actions\">\n          <button className=\"cancel-btn\" onClick={() => setShowBetModal(false)}>\n            Cancel\n          </button>\n          <button\n            className=\"confirm-btn\"\n            onClick={handleConfirmBet}\n            disabled={\n              isPlacingBet || (bettingMode === \"blockchain\" && !walletAddress)\n            }\n          >\n            {isPlacingBet\n              ? \"Placing Bet...\"\n              : bettingMode === \"blockchain\"\n              ? \"🔗 Place Real ETH Bet\"\n              : \"💾 Place Demo Bet\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BetConfirmationModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}